import Head from "next/head";
import {Header, Hero, Row} from "@/components";
import {GetServerSideProps} from "next";
import {API_REQUEST} from "@/services/api.service";
import {IMovie} from "@/interfaces/app.interface";
import {pop} from "@jridgewell/set-array";
import {useContext} from "react";
import {AuthContext} from "@/context/auth.context";
import {useInfoStore} from "@/store";

export default function Home({ trending, topRated, tvTopRated, popular, tvPopular, drama, documentary, family, history }: IHomeProps): JSX.Element {
    const { setModal, modal } = useInfoStore()
    const { isLoading } = useContext(AuthContext);

    if (isLoading) {
        return <>{"Loading..."}</>;
    }

    return (
        <div className="relative min-h-screen">
            <Head>
                <title>Home - Movie Website</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/logo.svg" />
            </Head>
            <Header />
            <main className="relative pl-4 pb-24 lg:space-y-24 lg:px-16">
            <Hero trending={trending} />
                <section>
                    <Row title="Top Rated" movies={topRated} />
                    <Row title="Tv Shows" movies={tvTopRated} isBig={true} />
                    <Row title="Popular" movies={popular} />
                    <Row title="Popular Shows" movies={tvPopular} isBig={true} />
                    <Row title="Drama" movies={drama} />
                    <Row title="Documentary" movies={documentary.reverse()} />
                    <Row title="Family" movies={family} />
                    <Row title="History" movies={history.reverse()} />
                </section>
            </main>
        </div>
    );
}

export const getServerSideProps: GetServerSideProps<IHomeProps> = async () => {
    const trending = await fetch(API_REQUEST.trending).then(res => res.json());
    const topRated = await fetch(API_REQUEST.top_rated).then(res => res.json());
    const tvTopRated = await fetch(API_REQUEST.tv_top_rated).then(res => res.json());
    const popular = await fetch(API_REQUEST.popular).then(res => res.json());
    const tvPopular = await fetch(API_REQUEST.tv_popular).then(res => res.json());
    const drama = await fetch(API_REQUEST.drama).then(res => res.json());
    const documentary = await fetch(API_REQUEST.documentary).then(res => res.json());
    const family = await fetch(API_REQUEST.family).then(res => res.json());
    const history = await fetch(API_REQUEST.history).then(res => res.json());

    return {
        props: {
            trending: trending.results,
            topRated: topRated.results,
            tvTopRated: tvTopRated.results,
            popular: popular.results,
            tvPopular: tvPopular.results,
            drama: drama.results,
            documentary: documentary.results,
            family: family.results,
            history: history.results,
        }
    }
}

interface IHomeProps {
    trending: IMovie[];
    topRated: IMovie[];
    tvTopRated: IMovie[];
    popular: IMovie[];
    tvPopular: IMovie[];
    drama: IMovie[];
    documentary: IMovie[];
    family: IMovie[];
    history: IMovie[];
}